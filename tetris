#!/usr/bin/python
"""
A python implementation of tetris.

Kevin Cuzner

This is more of an experiment on different things, like emulating C#
events (which I think are awesome), reading XML, and using curses
(although that may change eventually).

This uses the data.xml file to locate block shapes to use in the game.
The colors for the blocks are also set there as well.
"""

import curses
import time, datetime
from states import *

class Application(object):
    def __init__(self, window):
        self.window = window
        window.nodelay(1)
        self.manager = StateManager(LoadState())
        self.running = True
        self.manager.empty += self.stop # stop when manager stack empty
    def stop(self, manager):
        self.running = False
    def run(self):
        curses.curs_set(0)
        last_render = datetime.datetime.now()
        while(self.running):
            size = os.get_terminal_size()
            active = None
            while active is not self.manager.active_state:
                # we don't stop this until the state settles down
                recvd = self.window.getch()
                if recvd != -1:
                    self.manager.input(recvd)
                now = datetime.datetime.now()
                self.manager.render(self.window, now - last_render, size)
                active = self.manager.active_state
            last_render = now
            self.window.refresh()
            time.sleep(1/30)
        return
    
def main(window):
    app = Application(window)
    app.run()

if __name__ == "__main__":
    curses.wrapper(main)
